// <auto-generated />
using System;
using GJApples.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GJApples_API.Migrations
{
    [DbContext(typeof(GJApplesDbContext))]
    [Migration("20240207212717_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GJApples.Models.AppleVariety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostPerPound")
                        .HasColumnType("numeric");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppleVarieties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostPerPound = 1.20m,
                            ImageUrl = "https://i.ibb.co/ZMDrZFH/Honey-Crisp-Apple.jpg",
                            IsActive = true,
                            Type = "Honeycrisp"
                        },
                        new
                        {
                            Id = 2,
                            CostPerPound = 0.95m,
                            ImageUrl = "https://i.ibb.co/8bq7xWW/Granny-Smith-Apple.jpg",
                            IsActive = true,
                            Type = "Granny Smith"
                        },
                        new
                        {
                            Id = 3,
                            CostPerPound = 1.10m,
                            ImageUrl = "https://i.ibb.co/WBtxpKf/Fuji-Apple.webp",
                            IsActive = true,
                            Type = "Fuji"
                        },
                        new
                        {
                            Id = 4,
                            CostPerPound = 0.85m,
                            ImageUrl = "https://i.ibb.co/SNp02bf/Gala-Apple.jpg",
                            IsActive = true,
                            Type = "Gala"
                        },
                        new
                        {
                            Id = 5,
                            CostPerPound = 1.15m,
                            ImageUrl = "https://i.ibb.co/8XjJ88T/Pink-Lady-Apple.jpg",
                            IsActive = true,
                            Type = "Pink Lady"
                        },
                        new
                        {
                            Id = 6,
                            CostPerPound = 0.90m,
                            ImageUrl = "https://i.ibb.co/5rW7k1s/Braeburn-Apple.jpg",
                            IsActive = true,
                            Type = "Braeburn"
                        },
                        new
                        {
                            Id = 7,
                            CostPerPound = 0.80m,
                            ImageUrl = "https://i.ibb.co/C9GyMDj/Red-Delicious-Apple.jpg",
                            IsActive = true,
                            Type = "Red Delicious"
                        },
                        new
                        {
                            Id = 8,
                            CostPerPound = 0.85m,
                            ImageUrl = "https://i.ibb.co/Bz1tZ16/Golden-Delicious-Apple.jpg",
                            IsActive = true,
                            Type = "Golden Delicious"
                        });
                });

            modelBuilder.Entity("GJApples.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Canceled")
                        .HasColumnType("boolean");

                    b.Property<int>("CustomerUserProfileId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateOrdered")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EmployeeUserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerUserProfileId");

                    b.HasIndex("EmployeeUserProfileId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Canceled = true,
                            CustomerUserProfileId = 6,
                            DateOrdered = new DateTime(2023, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Canceled = true,
                            CustomerUserProfileId = 6,
                            DateOrdered = new DateTime(2023, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Canceled = true,
                            CustomerUserProfileId = 7,
                            DateOrdered = new DateTime(2023, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Canceled = false,
                            CustomerUserProfileId = 6,
                            DateCompleted = new DateTime(2023, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrdered = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeUserProfileId = 4
                        },
                        new
                        {
                            Id = 5,
                            Canceled = false,
                            CustomerUserProfileId = 7,
                            DateCompleted = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrdered = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeUserProfileId = 5
                        },
                        new
                        {
                            Id = 6,
                            Canceled = false,
                            CustomerUserProfileId = 7,
                            DateCompleted = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrdered = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeUserProfileId = 5
                        },
                        new
                        {
                            Id = 7,
                            Canceled = false,
                            CustomerUserProfileId = 7,
                            DateCompleted = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrdered = new DateTime(2023, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeUserProfileId = 4
                        },
                        new
                        {
                            Id = 8,
                            Canceled = false,
                            CustomerUserProfileId = 7,
                            DateCompleted = new DateTime(2023, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrdered = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeUserProfileId = 5
                        },
                        new
                        {
                            Id = 9,
                            Canceled = false,
                            CustomerUserProfileId = 6,
                            DateOrdered = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Canceled = false,
                            CustomerUserProfileId = 7,
                            DateOrdered = new DateTime(2023, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Canceled = false,
                            CustomerUserProfileId = 6,
                            DateOrdered = new DateTime(2023, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GJApples.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppleVarietyId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Pounds")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AppleVarietyId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppleVarietyId = 1,
                            OrderId = 1,
                            Pounds = 1.5m
                        },
                        new
                        {
                            Id = 2,
                            AppleVarietyId = 3,
                            OrderId = 1,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 3,
                            AppleVarietyId = 4,
                            OrderId = 1,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 4,
                            AppleVarietyId = 6,
                            OrderId = 1,
                            Pounds = 2.5m
                        },
                        new
                        {
                            Id = 5,
                            AppleVarietyId = 2,
                            OrderId = 2,
                            Pounds = 2.0m
                        },
                        new
                        {
                            Id = 6,
                            AppleVarietyId = 8,
                            OrderId = 2,
                            Pounds = 3.0m
                        },
                        new
                        {
                            Id = 7,
                            AppleVarietyId = 4,
                            OrderId = 2,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 8,
                            AppleVarietyId = 6,
                            OrderId = 2,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 9,
                            AppleVarietyId = 7,
                            OrderId = 3,
                            Pounds = 4.0m
                        },
                        new
                        {
                            Id = 10,
                            AppleVarietyId = 4,
                            OrderId = 3,
                            Pounds = 1.5m
                        },
                        new
                        {
                            Id = 11,
                            AppleVarietyId = 2,
                            OrderId = 3,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 12,
                            AppleVarietyId = 1,
                            OrderId = 3,
                            Pounds = 1.5m
                        },
                        new
                        {
                            Id = 13,
                            AppleVarietyId = 3,
                            OrderId = 4,
                            Pounds = 4.5m
                        },
                        new
                        {
                            Id = 14,
                            AppleVarietyId = 8,
                            OrderId = 4,
                            Pounds = 3.0m
                        },
                        new
                        {
                            Id = 15,
                            AppleVarietyId = 5,
                            OrderId = 4,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 16,
                            AppleVarietyId = 1,
                            OrderId = 4,
                            Pounds = 4.5m
                        },
                        new
                        {
                            Id = 17,
                            AppleVarietyId = 2,
                            OrderId = 4,
                            Pounds = 4.5m
                        },
                        new
                        {
                            Id = 18,
                            AppleVarietyId = 7,
                            OrderId = 4,
                            Pounds = 3.0m
                        },
                        new
                        {
                            Id = 19,
                            AppleVarietyId = 6,
                            OrderId = 5,
                            Pounds = 3.5m
                        },
                        new
                        {
                            Id = 20,
                            AppleVarietyId = 7,
                            OrderId = 5,
                            Pounds = 1.5m
                        },
                        new
                        {
                            Id = 21,
                            AppleVarietyId = 1,
                            OrderId = 5,
                            Pounds = 4.0m
                        },
                        new
                        {
                            Id = 22,
                            AppleVarietyId = 4,
                            OrderId = 5,
                            Pounds = 2.5m
                        },
                        new
                        {
                            Id = 23,
                            AppleVarietyId = 1,
                            OrderId = 6,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 24,
                            AppleVarietyId = 8,
                            OrderId = 6,
                            Pounds = 4.0m
                        },
                        new
                        {
                            Id = 25,
                            AppleVarietyId = 2,
                            OrderId = 6,
                            Pounds = 4.5m
                        },
                        new
                        {
                            Id = 26,
                            AppleVarietyId = 3,
                            OrderId = 7,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 27,
                            AppleVarietyId = 4,
                            OrderId = 7,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 28,
                            AppleVarietyId = 8,
                            OrderId = 8,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 29,
                            AppleVarietyId = 3,
                            OrderId = 8,
                            Pounds = 3.0m
                        },
                        new
                        {
                            Id = 30,
                            AppleVarietyId = 2,
                            OrderId = 8,
                            Pounds = 2.5m
                        },
                        new
                        {
                            Id = 31,
                            AppleVarietyId = 4,
                            OrderId = 8,
                            Pounds = 4.0m
                        },
                        new
                        {
                            Id = 32,
                            AppleVarietyId = 1,
                            OrderId = 8,
                            Pounds = 4.5m
                        },
                        new
                        {
                            Id = 33,
                            AppleVarietyId = 6,
                            OrderId = 8,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 34,
                            AppleVarietyId = 5,
                            OrderId = 8,
                            Pounds = 2.0m
                        },
                        new
                        {
                            Id = 35,
                            AppleVarietyId = 7,
                            OrderId = 8,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 36,
                            AppleVarietyId = 3,
                            OrderId = 9,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 37,
                            AppleVarietyId = 8,
                            OrderId = 9,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 38,
                            AppleVarietyId = 5,
                            OrderId = 9,
                            Pounds = 2.5m
                        },
                        new
                        {
                            Id = 39,
                            AppleVarietyId = 7,
                            OrderId = 9,
                            Pounds = 1.0m
                        },
                        new
                        {
                            Id = 40,
                            AppleVarietyId = 6,
                            OrderId = 9,
                            Pounds = 3.5m
                        },
                        new
                        {
                            Id = 41,
                            AppleVarietyId = 5,
                            OrderId = 10,
                            Pounds = 3.0m
                        },
                        new
                        {
                            Id = 42,
                            AppleVarietyId = 3,
                            OrderId = 10,
                            Pounds = 4.0m
                        },
                        new
                        {
                            Id = 43,
                            AppleVarietyId = 1,
                            OrderId = 10,
                            Pounds = 4.0m
                        },
                        new
                        {
                            Id = 44,
                            AppleVarietyId = 7,
                            OrderId = 10,
                            Pounds = 4.0m
                        },
                        new
                        {
                            Id = 45,
                            AppleVarietyId = 4,
                            OrderId = 10,
                            Pounds = 4.5m
                        },
                        new
                        {
                            Id = 46,
                            AppleVarietyId = 6,
                            OrderId = 10,
                            Pounds = 4.5m
                        },
                        new
                        {
                            Id = 47,
                            AppleVarietyId = 8,
                            OrderId = 10,
                            Pounds = 2.0m
                        },
                        new
                        {
                            Id = 48,
                            AppleVarietyId = 1,
                            OrderId = 11,
                            Pounds = 2.0m
                        },
                        new
                        {
                            Id = 49,
                            AppleVarietyId = 8,
                            OrderId = 11,
                            Pounds = 2.5m
                        },
                        new
                        {
                            Id = 50,
                            AppleVarietyId = 6,
                            OrderId = 11,
                            Pounds = 1.0m
                        });
                });

            modelBuilder.Entity("GJApples.Models.Tree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppleVarietyId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DatePlanted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateRemoved")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AppleVarietyId");

                    b.ToTable("Trees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppleVarietyId = 1,
                            DatePlanted = new DateTime(2015, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AppleVarietyId = 1,
                            DatePlanted = new DateTime(2016, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AppleVarietyId = 2,
                            DatePlanted = new DateTime(2017, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AppleVarietyId = 2,
                            DatePlanted = new DateTime(2018, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateRemoved = new DateTime(2023, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AppleVarietyId = 3,
                            DatePlanted = new DateTime(2019, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AppleVarietyId = 3,
                            DatePlanted = new DateTime(2020, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AppleVarietyId = 4,
                            DatePlanted = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AppleVarietyId = 4,
                            DatePlanted = new DateTime(2022, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AppleVarietyId = 5,
                            DatePlanted = new DateTime(2016, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AppleVarietyId = 5,
                            DatePlanted = new DateTime(2017, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AppleVarietyId = 6,
                            DatePlanted = new DateTime(2018, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AppleVarietyId = 6,
                            DatePlanted = new DateTime(2019, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            AppleVarietyId = 7,
                            DatePlanted = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            AppleVarietyId = 7,
                            DatePlanted = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            AppleVarietyId = 8,
                            DatePlanted = new DateTime(2022, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            AppleVarietyId = 8,
                            DatePlanted = new DateTime(2023, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            AppleVarietyId = 1,
                            DatePlanted = new DateTime(2017, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            AppleVarietyId = 2,
                            DatePlanted = new DateTime(2018, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateRemoved = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            AppleVarietyId = 3,
                            DatePlanted = new DateTime(2019, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            AppleVarietyId = 4,
                            DatePlanted = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GJApples.Models.TreeHarvestReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeUserProfileId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("HarvestDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("PoundsHarvested")
                        .HasColumnType("numeric");

                    b.Property<int>("TreeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeUserProfileId");

                    b.HasIndex("TreeId");

                    b.ToTable("TreeHarvestReports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 45.5m,
                            TreeId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 23m,
                            TreeId = 1
                        },
                        new
                        {
                            Id = 3,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 32.25m,
                            TreeId = 2
                        },
                        new
                        {
                            Id = 4,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 50m,
                            TreeId = 2
                        },
                        new
                        {
                            Id = 5,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 58.75m,
                            TreeId = 3
                        },
                        new
                        {
                            Id = 6,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 54m,
                            TreeId = 3
                        },
                        new
                        {
                            Id = 7,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 57m,
                            TreeId = 4
                        },
                        new
                        {
                            Id = 8,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 28m,
                            TreeId = 5
                        },
                        new
                        {
                            Id = 9,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 38m,
                            TreeId = 5
                        },
                        new
                        {
                            Id = 10,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 28m,
                            TreeId = 6
                        },
                        new
                        {
                            Id = 11,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 45m,
                            TreeId = 6
                        },
                        new
                        {
                            Id = 12,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 30m,
                            TreeId = 7
                        },
                        new
                        {
                            Id = 13,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 49m,
                            TreeId = 7
                        },
                        new
                        {
                            Id = 14,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 52m,
                            TreeId = 8
                        },
                        new
                        {
                            Id = 15,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 38m,
                            TreeId = 8
                        },
                        new
                        {
                            Id = 16,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 56m,
                            TreeId = 9
                        },
                        new
                        {
                            Id = 17,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 27m,
                            TreeId = 9
                        },
                        new
                        {
                            Id = 18,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 50m,
                            TreeId = 10
                        },
                        new
                        {
                            Id = 19,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 16m,
                            TreeId = 10
                        },
                        new
                        {
                            Id = 20,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 15m,
                            TreeId = 11
                        },
                        new
                        {
                            Id = 21,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 35m,
                            TreeId = 11
                        },
                        new
                        {
                            Id = 22,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 26m,
                            TreeId = 12
                        },
                        new
                        {
                            Id = 23,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 56m,
                            TreeId = 12
                        },
                        new
                        {
                            Id = 24,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 31m,
                            TreeId = 13
                        },
                        new
                        {
                            Id = 25,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 50m,
                            TreeId = 13
                        },
                        new
                        {
                            Id = 26,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 40m,
                            TreeId = 14
                        },
                        new
                        {
                            Id = 27,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 38m,
                            TreeId = 14
                        },
                        new
                        {
                            Id = 28,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 46m,
                            TreeId = 15
                        },
                        new
                        {
                            Id = 29,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 24m,
                            TreeId = 15
                        },
                        new
                        {
                            Id = 30,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 41m,
                            TreeId = 16
                        },
                        new
                        {
                            Id = 31,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 46m,
                            TreeId = 16
                        },
                        new
                        {
                            Id = 32,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 42m,
                            TreeId = 17
                        },
                        new
                        {
                            Id = 33,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 52m,
                            TreeId = 17
                        },
                        new
                        {
                            Id = 34,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 55m,
                            TreeId = 18
                        },
                        new
                        {
                            Id = 35,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 51m,
                            TreeId = 19
                        },
                        new
                        {
                            Id = 36,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 19m,
                            TreeId = 19
                        },
                        new
                        {
                            Id = 37,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 26m,
                            TreeId = 20
                        },
                        new
                        {
                            Id = 38,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 50m,
                            TreeId = 20
                        },
                        new
                        {
                            Id = 39,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 16m,
                            TreeId = 1
                        },
                        new
                        {
                            Id = 40,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 43m,
                            TreeId = 1
                        },
                        new
                        {
                            Id = 41,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 26m,
                            TreeId = 2
                        },
                        new
                        {
                            Id = 42,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 18m,
                            TreeId = 2
                        },
                        new
                        {
                            Id = 43,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 50m,
                            TreeId = 3
                        },
                        new
                        {
                            Id = 44,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 56m,
                            TreeId = 3
                        },
                        new
                        {
                            Id = 45,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 58m,
                            TreeId = 4
                        },
                        new
                        {
                            Id = 46,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 31m,
                            TreeId = 5
                        },
                        new
                        {
                            Id = 47,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 28m,
                            TreeId = 6
                        },
                        new
                        {
                            Id = 48,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 51m,
                            TreeId = 7
                        },
                        new
                        {
                            Id = 49,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 41m,
                            TreeId = 8
                        },
                        new
                        {
                            Id = 50,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 27m,
                            TreeId = 9
                        },
                        new
                        {
                            Id = 51,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 25m,
                            TreeId = 10
                        },
                        new
                        {
                            Id = 52,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 16m,
                            TreeId = 11
                        },
                        new
                        {
                            Id = 53,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 41m,
                            TreeId = 12
                        },
                        new
                        {
                            Id = 54,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 19m,
                            TreeId = 13
                        },
                        new
                        {
                            Id = 55,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 42m,
                            TreeId = 14
                        },
                        new
                        {
                            Id = 56,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 37m,
                            TreeId = 15
                        },
                        new
                        {
                            Id = 57,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 20m,
                            TreeId = 16
                        },
                        new
                        {
                            Id = 58,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 26m,
                            TreeId = 17
                        },
                        new
                        {
                            Id = 59,
                            EmployeeUserProfileId = 2,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 23m,
                            TreeId = 18
                        },
                        new
                        {
                            Id = 60,
                            EmployeeUserProfileId = 3,
                            HarvestDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PoundsHarvested = 17m,
                            TreeId = 19
                        });
                });

            modelBuilder.Entity("GJApples.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ForcePasswordChange")
                        .HasColumnType("boolean");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "101 Main Street",
                            FirstName = "Garry",
                            ForcePasswordChange = false,
                            IdentityUserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 2,
                            Address = "102 Harvest Lane",
                            FirstName = "Josh",
                            ForcePasswordChange = false,
                            IdentityUserId = "8c3605d2-c0da-4592-8879-0c71dc3c02c4",
                            LastName = "Harvester"
                        },
                        new
                        {
                            Id = 3,
                            Address = "103 Harvest Lane",
                            FirstName = "Haley",
                            ForcePasswordChange = false,
                            IdentityUserId = "3a64b2c1-7780-40f1-a393-8edb30c4b2ab",
                            LastName = "Harvester"
                        },
                        new
                        {
                            Id = 4,
                            Address = "104 Picker Street",
                            FirstName = "Chris",
                            ForcePasswordChange = false,
                            IdentityUserId = "83aab5f4-67ba-4da9-940e-fef0ce8597bd",
                            LastName = "Picker"
                        },
                        new
                        {
                            Id = 5,
                            Address = "105 Picker Street",
                            FirstName = "Kyle",
                            ForcePasswordChange = false,
                            IdentityUserId = "03d8deac-3687-4274-82c1-e1d32392d2de",
                            LastName = "Picker"
                        },
                        new
                        {
                            Id = 6,
                            Address = "106 Customer Road",
                            FirstName = "Debbie",
                            ForcePasswordChange = false,
                            IdentityUserId = "c8c02266-41e6-414d-a1fc-14bbefef86a0",
                            LastName = "Customer"
                        },
                        new
                        {
                            Id = 7,
                            Address = "107 Customer Road",
                            FirstName = "Aaron",
                            ForcePasswordChange = false,
                            IdentityUserId = "bc3a3871-4800-4061-8182-b965c9c109bc",
                            LastName = "Customer"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35",
                            ConcurrencyStamp = "0bda568c-9b03-4930-9b6d-e0eb042950e1",
                            Name = "Admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = "8b2b3a2d-62f6-4f2b-8b3d-45b6a1f3b5b4",
                            ConcurrencyStamp = "869d289d-1774-4201-b747-ef30b6a7c7b7",
                            Name = "Harvester",
                            NormalizedName = "harvester"
                        },
                        new
                        {
                            Id = "f65f1f30-d0b1-4f59-a3c8-eb1f2e6757d3",
                            ConcurrencyStamp = "3689cf26-93c8-4328-afd2-f2a203312ce3",
                            Name = "OrderPicker",
                            NormalizedName = "orderpicker"
                        },
                        new
                        {
                            Id = "d4f146bf-70c8-4d02-98ec-0b5f4b9d213f",
                            ConcurrencyStamp = "001b314f-b8fe-4b15-9405-509206aa3841",
                            Name = "Customer",
                            NormalizedName = "customer"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e59b376-57f8-43ea-8280-1a20402ab5c1",
                            Email = "admin@gjapples.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEIaOShTpsidJ/FpHr39Dw//XHROU4BxhqEXfvVto/alTbXh54mVTufRT+oHpYQUlng==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7af82250-ee1d-4f96-9ae6-75058638fb9c",
                            TwoFactorEnabled = false,
                            UserName = "Administrator"
                        },
                        new
                        {
                            Id = "8c3605d2-c0da-4592-8879-0c71dc3c02c4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cb196acd-fd19-4c7b-9980-ba2388fe871a",
                            Email = "josh@gjapples.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEN63PQlC9fS2lep0MipajvshNk9bjnLtEUWyAx6sLGDvCRBL3aH5A3hlD05Ftp65Ug==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cf25197d-f768-44e0-9af6-00d4490825da",
                            TwoFactorEnabled = false,
                            UserName = "Josh"
                        },
                        new
                        {
                            Id = "3a64b2c1-7780-40f1-a393-8edb30c4b2ab",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "94791d7f-33d8-4269-8c7b-afc4edc0abb0",
                            Email = "haley@gjapples.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEAIdY5k1z97WT5Hn1ivfHlq1AN1Koua/Vzhk29lGEQtj9CPi2Rp23olspIhC2U7trA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b1c78d5-795a-4f14-a742-5f0f29b56566",
                            TwoFactorEnabled = false,
                            UserName = "Haley"
                        },
                        new
                        {
                            Id = "83aab5f4-67ba-4da9-940e-fef0ce8597bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29b29cd2-a216-4895-b81e-823e893f0dba",
                            Email = "chris@gjapples.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEKHf2T87Ob9kG0LstjyojFmvgD7zyM0xBf70LD68wrKYq61GOrxwyh0fPNZxs3U9aw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "efaf6c17-ff57-4462-9995-990937c6d8f8",
                            TwoFactorEnabled = false,
                            UserName = "Chris"
                        },
                        new
                        {
                            Id = "03d8deac-3687-4274-82c1-e1d32392d2de",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d0f563c9-d901-40fa-9813-5267ffbc9a00",
                            Email = "kyle@gjapples.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEETjUStPR0gASWpphwKvJgEdMUljLwpBDElbxZbprBYcJlZmw7JQHFW4trLT1L6Y1w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "266094e8-552d-4c2e-b1a3-757ec930ca47",
                            TwoFactorEnabled = false,
                            UserName = "Kyle"
                        },
                        new
                        {
                            Id = "c8c02266-41e6-414d-a1fc-14bbefef86a0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2afa5abc-e4f8-4dae-b16d-a7bdad15532a",
                            Email = "debbie@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEFwSi02GFJi1i4UBHe+VOInsIPKb91Whe6TKD34LLBuFr3d810I5u2APn2JCzuc9jQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c9b10c36-6de2-48c3-96c2-70f62dd95add",
                            TwoFactorEnabled = false,
                            UserName = "Debbie"
                        },
                        new
                        {
                            Id = "bc3a3871-4800-4061-8182-b965c9c109bc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9c21b50f-8070-4381-a7d1-839ed80c3aab",
                            Email = "aaron@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEEvkJX47B1N/VA/2l7Fqqzz9xlX2OiJ+kC00gnO+mMHyoI2lIbMUtnA07ZUuGJzXig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a6015418-0ff2-4718-bd5d-d6f9157d3eb1",
                            TwoFactorEnabled = false,
                            UserName = "Aaron"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            RoleId = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35"
                        },
                        new
                        {
                            UserId = "8c3605d2-c0da-4592-8879-0c71dc3c02c4",
                            RoleId = "8b2b3a2d-62f6-4f2b-8b3d-45b6a1f3b5b4"
                        },
                        new
                        {
                            UserId = "3a64b2c1-7780-40f1-a393-8edb30c4b2ab",
                            RoleId = "8b2b3a2d-62f6-4f2b-8b3d-45b6a1f3b5b4"
                        },
                        new
                        {
                            UserId = "83aab5f4-67ba-4da9-940e-fef0ce8597bd",
                            RoleId = "f65f1f30-d0b1-4f59-a3c8-eb1f2e6757d3"
                        },
                        new
                        {
                            UserId = "03d8deac-3687-4274-82c1-e1d32392d2de",
                            RoleId = "f65f1f30-d0b1-4f59-a3c8-eb1f2e6757d3"
                        },
                        new
                        {
                            UserId = "c8c02266-41e6-414d-a1fc-14bbefef86a0",
                            RoleId = "d4f146bf-70c8-4d02-98ec-0b5f4b9d213f"
                        },
                        new
                        {
                            UserId = "bc3a3871-4800-4061-8182-b965c9c109bc",
                            RoleId = "d4f146bf-70c8-4d02-98ec-0b5f4b9d213f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GJApples.Models.Order", b =>
                {
                    b.HasOne("GJApples.Models.UserProfile", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerUserProfileId");

                    b.HasOne("GJApples.Models.UserProfile", "Employee")
                        .WithMany("CompletedOrders")
                        .HasForeignKey("EmployeeUserProfileId");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("GJApples.Models.OrderItem", b =>
                {
                    b.HasOne("GJApples.Models.AppleVariety", "AppleVariety")
                        .WithMany("OrderItems")
                        .HasForeignKey("AppleVarietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GJApples.Models.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppleVariety");
                });

            modelBuilder.Entity("GJApples.Models.Tree", b =>
                {
                    b.HasOne("GJApples.Models.AppleVariety", "AppleVariety")
                        .WithMany("Trees")
                        .HasForeignKey("AppleVarietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppleVariety");
                });

            modelBuilder.Entity("GJApples.Models.TreeHarvestReport", b =>
                {
                    b.HasOne("GJApples.Models.UserProfile", "Employee")
                        .WithMany("TreeHarvestReports")
                        .HasForeignKey("EmployeeUserProfileId");

                    b.HasOne("GJApples.Models.Tree", "Tree")
                        .WithMany("TreeHarvestReports")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("GJApples.Models.UserProfile", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GJApples.Models.AppleVariety", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Trees");
                });

            modelBuilder.Entity("GJApples.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("GJApples.Models.Tree", b =>
                {
                    b.Navigation("TreeHarvestReports");
                });

            modelBuilder.Entity("GJApples.Models.UserProfile", b =>
                {
                    b.Navigation("CompletedOrders");

                    b.Navigation("Orders");

                    b.Navigation("TreeHarvestReports");
                });
#pragma warning restore 612, 618
        }
    }
}
